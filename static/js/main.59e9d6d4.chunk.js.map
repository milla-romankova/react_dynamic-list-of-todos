{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api/api.js","App.jsx","index.js"],"names":["TodoList","state","query","visibleTodos","filterCompleted","all","active","todo","completed","handleChange","event","target","name","value","setState","toLowerCase","this","props","todos","selectUser","selectedUserId","filteredTodos","filter","title","includes","className","htmlFor","type","id","onChange","map","userId","key","classNames","checked","readOnly","onClick","React","Component","CurrentUser","user","clearUser","loadData","prevProps","getUser","email","phone","fetch","then","response","json","data","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59e9d6d4.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends React.Component {\n  state = {\n    query: '',\n    visibleTodos: 'all',\n  }\n\n  filterCompleted = {\n    all: () => true,\n    active: todo => !todo.completed,\n    completed: todo => todo.completed,\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value.toLowerCase() });\n  }\n\n  render() {\n    const { query, visibleTodos } = this.state;\n    const { todos, selectUser, selectedUserId } = this.props;\n    const { handleChange, filterCompleted } = this;\n\n    const filteredTodos = todos\n      .filter(todo => todo.title.toLowerCase().includes(query)\n        && filterCompleted[visibleTodos](todo));\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__inputs\">\n          <label htmlFor=\"search\">\n            Search todo in list:\n            <input\n              type=\"text\"\n              id=\"search\"\n              className=\"TodoList__input\"\n              name=\"query\"\n              value={query}\n              onChange={handleChange}\n            />\n          </label>\n\n          <label htmlFor=\"visibletodos\">\n            Choose todos\n            <select\n              id=\"visibleTodos\"\n              name=\"visibleTodos\"\n              value={visibleTodos}\n              onChange={handleChange}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </label>\n        </div>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(({ id, userId, completed, title }) => (\n              <li\n                key={id}\n                className={classNames('TodoList__item',\n                  {\n                    'TodoList__item--unchecked': !completed,\n                    'TodoList__item--checked': completed,\n                  })}\n              >\n\n                <label>\n                  <input type=\"checkbox\" checked={completed} readOnly />\n                  <p>{title}</p>\n                </label>\n\n                <button\n                  type=\"button\"\n                  className={classNames('TodoList__user-button button',\n                    {\n                      'TodoList__user-button--selected':\n                        userId === selectedUserId,\n                    })}\n                  onClick={() => selectUser(userId)}\n                >\n                  {`UserID #${userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state={\n    user: 0,\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  clearUser = () => {\n    this.props.selectUser(0);\n  }\n\n  async loadData() {\n    const user = await (this.props.getUser(this.props.userId));\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {user.id}\n          </span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.clearUser}\n        >\n          Clear user\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  selectUser: PropTypes.func.isRequired,\n  getUser: PropTypes.func.isRequired,\n};\n","const TODOS_URL = 'https://mate-api.herokuapp.com/todos/';\nconst USERS_URL = 'https://mate-api.herokuapp.com/users/';\n\nexport const getAllTodos = () => fetch(TODOS_URL)\n  .then(response => response.json())\n  .then(todos => todos.data);\n\nexport const getUser = id => fetch(`${USERS_URL}${id}`)\n  .then(response => response.json())\n  .then(user => user.data);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos, getUser } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getAllTodos()\n      .then((todos) => {\n        this.setState({ todos });\n      });\n  }\n\n  selectUser = (id) => {\n    this.setState({\n      selectedUserId: id,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n    const { selectUser } = this;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={selectUser}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                getUser={getUser}\n                selectUser={selectUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}